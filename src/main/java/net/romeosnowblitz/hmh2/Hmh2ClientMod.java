package net.romeosnowblitz.hmh2;

import net.fabricmc.api.ClientModInitializer;
import net.fabricmc.fabric.api.blockrenderlayer.v1.BlockRenderLayerMap;
import net.fabricmc.fabric.api.client.particle.v1.ParticleFactoryRegistry;
import net.fabricmc.fabric.api.client.render.fluid.v1.FluidRenderHandlerRegistry;
import net.fabricmc.fabric.api.client.render.fluid.v1.SimpleFluidRenderHandler;
import net.fabricmc.fabric.api.client.rendering.v1.EntityModelLayerRegistry;
import net.fabricmc.fabric.api.client.rendering.v1.EntityRendererRegistry;
import net.minecraft.client.render.RenderLayer;
import net.minecraft.client.render.TexturedRenderLayers;
import net.minecraft.client.render.block.entity.BlockEntityRendererFactories;
import net.minecraft.client.render.block.entity.HangingSignBlockEntityRenderer;
import net.minecraft.client.render.block.entity.SignBlockEntityRenderer;
import net.romeosnowblitz.hmh2.block.ColoringBlocks;
import net.romeosnowblitz.hmh2.block.MagicBlocks;
import net.romeosnowblitz.hmh2.block.ModBlocks;
import net.romeosnowblitz.hmh2.block.WoodworkBlocks;
import net.romeosnowblitz.hmh2.blotty.ModBlockEntities;
import net.romeosnowblitz.hmh2.entity.ModEntities;
import net.romeosnowblitz.hmh2.entity.boss.blazing_inferno.BlazingInfernoModel;
import net.romeosnowblitz.hmh2.entity.boss.blazing_inferno.BlazingInfernoRenderer;
import net.romeosnowblitz.hmh2.entity.boss.kraken.KrakenModel;
import net.romeosnowblitz.hmh2.entity.boss.kraken.KrakenRenderer;
import net.romeosnowblitz.hmh2.entity.fish.lava.LavaFishModel;
import net.romeosnowblitz.hmh2.entity.fish.lava.LavaFishRenderer;
import net.romeosnowblitz.hmh2.entity.passive.cal.CalModel;
import net.romeosnowblitz.hmh2.entity.passive.cal.CalRenderer;
import net.romeosnowblitz.hmh2.entity.monster.demon.DemonModel;
import net.romeosnowblitz.hmh2.entity.monster.demon.DemonRenderer;
import net.romeosnowblitz.hmh2.entity.fish.water.PiranhaModel;
import net.romeosnowblitz.hmh2.entity.fish.water.PiranhaRenderer;
import net.romeosnowblitz.hmh2.entity.boss.headless_horseman.HeadlessHorsemanModel;
import net.romeosnowblitz.hmh2.entity.boss.headless_horseman.HeadlessHorsemanRenderer;
import net.romeosnowblitz.hmh2.entity.monster.lost_soul.LostSoulModel;
import net.romeosnowblitz.hmh2.entity.monster.lost_soul.LostSoulRenderer;
import net.romeosnowblitz.hmh2.entity.mites.ashmite.AshmiteModel;
import net.romeosnowblitz.hmh2.entity.mites.ashmite.AshmiteRenderer;
import net.romeosnowblitz.hmh2.entity.mites.bloodmite.BloodmiteModel;
import net.romeosnowblitz.hmh2.entity.mites.bloodmite.BloodmiteRenderer;
import net.romeosnowblitz.hmh2.entity.mites.hellmite.HellmiteModel;
import net.romeosnowblitz.hmh2.entity.mites.hellmite.HellmiteRenderer;
import net.romeosnowblitz.hmh2.entity.mites.magmite.MagmiteModel;
import net.romeosnowblitz.hmh2.entity.mites.magmite.MagmiteRenderer;
import net.romeosnowblitz.hmh2.entity.mites.warpmite.WarpmiteModel;
import net.romeosnowblitz.hmh2.entity.mites.warpmite.WarpmiteRenderer;
import net.romeosnowblitz.hmh2.entity.passive.penguin.PenguinModel;
import net.romeosnowblitz.hmh2.entity.passive.penguin.PenguinRenderer;
import net.romeosnowblitz.hmh2.entity.mites.sculkmite.SculkmiteModel;
import net.romeosnowblitz.hmh2.entity.mites.sculkmite.SculkmiteRenderer;
import net.romeosnowblitz.hmh2.entity.projectiles.magicflame.MagicFlameProjectileModel;
import net.romeosnowblitz.hmh2.entity.projectiles.magicflame.MagicFlameProjectileRenderer;
import net.romeosnowblitz.hmh2.entity.boss.soldier_bee.SoldierBeeModel;
import net.romeosnowblitz.hmh2.entity.boss.soldier_bee.SoldierBeeRenderer;
import net.romeosnowblitz.hmh2.entity.boss.queen_bee.QueenBeeModel;
import net.romeosnowblitz.hmh2.entity.boss.queen_bee.QueenBeeRenderer;
import net.romeosnowblitz.hmh2.entity.monster.shadow_creature.ShadowCreatureModel;
import net.romeosnowblitz.hmh2.entity.monster.shadow_creature.ShadowCreatureRenderer;
import net.romeosnowblitz.hmh2.entity.monster.the_great_hunger.TheGreatHungerModel;
import net.romeosnowblitz.hmh2.entity.monster.the_great_hunger.TheGreatHungerRenderer;
import net.romeosnowblitz.hmh2.entity.passive.wisp.WispModel;
import net.romeosnowblitz.hmh2.entity.passive.wisp.WispRenderer;
import net.romeosnowblitz.hmh2.entity.test.TestModel;
import net.romeosnowblitz.hmh2.entity.test.TestRenderer;
import net.romeosnowblitz.hmh2.fluid.ModFluids;
import net.romeosnowblitz.hmh2.keys.KeyInputHandler;
import net.romeosnowblitz.hmh2.particle.ModParticleTypes;
import net.romeosnowblitz.hmh2.particle.PurpleFlame;
import net.romeosnowblitz.hmh2.util.ModModelPredicateProvider;
import net.romeosnowblitz.hmh2.keys.ModNetworking;
import net.romeosnowblitz.hmh2.util.ModWoodTypes;

public class Hmh2ClientMod implements ClientModInitializer {

    public void onInitializeClient() {
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.PURPLE_TORCH, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.WALL_PURPLE_TORCH, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.LAMP_TORCH, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.LAMP_WALL_TORCH, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.BANANA_PEEL, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.BLUE_SPIDER_LILY, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.ULTRAMARINE_STAINED_GLASS, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.ULTRAMARINE_STAINED_GLASS_PANE, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.POISON_GRASS, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.ROSE, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.ROSE_STAINED_GLASS, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.ROSE_STAINED_GLASS_PANE, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.WOLFSBANE, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.VIOLET_STAINED_GLASS, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.VIOLET_STAINED_GLASS_PANE, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.NEW_GREEN_STAINED_GLASS, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.NEW_GREEN_STAINED_GLASS_PANE, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.SPRING_GREEN_STAINED_GLASS, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ColoringBlocks.SPRING_GREEN_STAINED_GLASS_PANE, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.BLUEBERRY_BUSH, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.STRAWBERRY_BUSH, RenderLayer.getCutout());

        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.AMBER_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.ANDALUSITE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.AQUAMARINE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.CITRINE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.DIOPSIDE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.GARNET_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.HESSONITE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.MALICHITE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.MOONSTONE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.OPAL_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.PERIDOT_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.PREHNITE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.RUBY_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.SAPPHIRE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.SMOKY_QUARTZ_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.SPESSARITE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.SPHENE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.SPINEL_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.TANZANITE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.TOPAZ_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.TORMALINE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.TSAVORITE_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.ZIRCON_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.AMETHYST_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.CHARCOAL_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.COAL_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.COPPER_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.DIAMOND_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.EMERALD_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.FLINT_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.GOLD_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.IRON_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(MagicBlocks.LAPIS_DUST, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.XRAY, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.MIDAS_TOUCH, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.ENDER_CORN_BLOCK, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.ROYAL_JELLY, RenderLayer.getTranslucent());
        BlockRenderLayerMap.INSTANCE.putBlock(ModBlocks.ICED_BUCKET, RenderLayer.getTranslucent());

        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.BANANA_SAPLING, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.BANANA_LEAVES, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.BANANA_DOOR, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.BANANA_TRAPDOOR, RenderLayer.getCutout());
        TexturedRenderLayers.SIGN_TYPE_TEXTURES.put(ModWoodTypes.BANANA, TexturedRenderLayers.getSignTextureId(ModWoodTypes.BANANA));
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.CHERRY_SAPLING, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.CHERRY_LEAVES, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.CHERRY_DOOR, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.CHERRY_TRAPDOOR, RenderLayer.getCutout());
        TexturedRenderLayers.SIGN_TYPE_TEXTURES.put(ModWoodTypes.CHERRY, TexturedRenderLayers.getSignTextureId(ModWoodTypes.CHERRY));
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.CORK_OAK_SAPLING, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.CORK_OAK_LEAVES, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.CORK_OAK_DOOR, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.CORK_OAK_TRAPDOOR, RenderLayer.getCutout());
        TexturedRenderLayers.SIGN_TYPE_TEXTURES.put(ModWoodTypes.CORK_OAK, TexturedRenderLayers.getSignTextureId(ModWoodTypes.CORK_OAK));
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.JACARANDA_SAPLING, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.JACARANDA_LEAVES, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.JACARANDA_DOOR, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.JACARANDA_TRAPDOOR, RenderLayer.getCutout());
        TexturedRenderLayers.SIGN_TYPE_TEXTURES.put(ModWoodTypes.JACARANDA, TexturedRenderLayers.getSignTextureId(ModWoodTypes.JACARANDA));
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.MAHOE_SAPLING, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.MAHOE_LEAVES, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.MAHOE_DOOR, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.MAHOE_TRAPDOOR, RenderLayer.getCutout());
        TexturedRenderLayers.SIGN_TYPE_TEXTURES.put(ModWoodTypes.MAHOE, TexturedRenderLayers.getSignTextureId(ModWoodTypes.MAHOE));
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.MANGO_SAPLING, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.MANGO_LEAVES, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.MANGO_DOOR, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.MANGO_TRAPDOOR, RenderLayer.getCutout());
        TexturedRenderLayers.SIGN_TYPE_TEXTURES.put(ModWoodTypes.MANGO, TexturedRenderLayers.getSignTextureId(ModWoodTypes.MANGO));
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.WILLOW_SAPLING, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.WILLOW_LEAVES, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.WILLOW_DOOR, RenderLayer.getCutout());
        BlockRenderLayerMap.INSTANCE.putBlock(WoodworkBlocks.WILLOW_TRAPDOOR, RenderLayer.getCutout());
        TexturedRenderLayers.SIGN_TYPE_TEXTURES.put(ModWoodTypes.WILLOW, TexturedRenderLayers.getSignTextureId(ModWoodTypes.WILLOW));
        BlockEntityRendererFactories.register(ModBlockEntities.MOD_SIGN_BLOCK_ENTITY, SignBlockEntityRenderer::new);
        BlockEntityRendererFactories.register(ModBlockEntities.MOD_HANGING_SIGN_BLOCK_ENTITY, HangingSignBlockEntityRenderer::new);

        ModModelPredicateProvider.registerModModels();
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.CHOCOLATE_MILK_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x976746));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.CHOCOLATE_MILK_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x976746));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HEATED_OIL_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x423b2f));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HEATED_OIL_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x423b2f));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HONEY_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xdd760f));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HONEY_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xdd760f));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.OIL_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x423b2f));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.OIL_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x423b2f));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.QUICKSAND_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xaa8b78));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.QUICKSAND_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xaa8b78));

        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.ABSORPTION_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x2551a3));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.ABSORPTION_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x2551a3));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.BAD_LUCK_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xbea24c));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.BAD_LUCK_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xbea24c));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.BAD_OMEN_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x0b6037));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.BAD_OMEN_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x0b6037));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.BLINDNESS_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x1f1f23));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.BLINDNESS_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x1f1f23));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.CONDUIT_POWER_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x1dc0cf));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.CONDUIT_POWER_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x1dc0cf));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.DARKNESS_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x282721));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.DARKNESS_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x282721));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.DOLPHINS_GRACE_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x86a1bc));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.DOLPHINS_GRACE_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x86a1bc));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.FIRE_IMMUNITY_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xfc9700));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.FIRE_IMMUNITY_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xfc9700));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.GLOWING_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x929e60));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.GLOWING_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x929e60));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HASTE_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xd6be42));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HASTE_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xd6be42));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HEALTH_BOOST_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xf57c23));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HEALTH_BOOST_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xf57c23));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HUNGER_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x577552));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.HUNGER_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x577552));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.INSTANT_DAMAGE_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xa76469));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.INSTANT_DAMAGE_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xa76469));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.INSTANT_HEALTH_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xf52423));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.INSTANT_HEALTH_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xf52423));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.INVISIBILITY_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xf3f3f3));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.INVISIBILITY_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xf3f3f3));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.JUMP_BOOST_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xfafc82));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.JUMP_BOOST_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xfafc82));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.LEVITATION_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xccfcfc));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.LEVITATION_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xccfcfc));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.LUCK_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x58bf06));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.LUCK_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x58bf06));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.MINING_FATIGUE_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x494117));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.MINING_FATIGUE_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x494117));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.NAUSEA_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x541d49));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.NAUSEA_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x541d49));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.NIGHT_VISION_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xc0fc65));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.NIGHT_VISION_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xc0fc65));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.POISON_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x85a162));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.POISON_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x85a162));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.REGENERATION_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xcb5ba9));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.REGENERATION_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xcb5ba9));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.RESISTANCE_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x8f45ed));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.RESISTANCE_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x8f45ed));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.SATURATION_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xf52423));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.SATURATION_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xf52423));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.SLOW_FALLING_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xfceccf));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.SLOW_FALLING_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xfceccf));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.SLOWNESS_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x89addd));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.SLOWNESS_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x89addd));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.SPEED_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x32e8fc));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.SPEED_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x32e8fc));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.STRENGTH_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xfcc500));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.STRENGTH_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0xfcc500));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.VILLAGE_HERO_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x43fc43));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.VILLAGE_HERO_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x43fc43));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.WATER_BREATHING_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x96d7be));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.WATER_BREATHING_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x96d7be));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.WEAKNESS_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x474c47));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.WEAKNESS_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x474c47));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.WITHER_FLUID_STILL, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x342927));
        FluidRenderHandlerRegistry.INSTANCE.register(ModFluids.WITHER_FLUID_FLOWING, new SimpleFluidRenderHandler(SimpleFluidRenderHandler.WATER_STILL, SimpleFluidRenderHandler.WATER_FLOWING, SimpleFluidRenderHandler.WATER_OVERLAY, 0x342927));

        EntityModelLayerRegistry.registerModelLayer(AshmiteModel.ASHMITE, AshmiteModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.ASHMITE, AshmiteRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(BlazingInfernoModel.BLAZING_INFERNO, BlazingInfernoModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.BLAZING_INFERNO, BlazingInfernoRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(BloodmiteModel.BLOODMITE, BloodmiteModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.BLOODMITE, BloodmiteRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(CalModel.CAL, CalModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.CAL, CalRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(DemonModel.DEMON, DemonModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.DEMON, DemonRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(HeadlessHorsemanModel.HEADLESS_HORSEMAN, HeadlessHorsemanModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.HEADLESS_HORSEMAN, HeadlessHorsemanRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(HellmiteModel.HELLMITE, HellmiteModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.HELLMITE, HellmiteRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(LostSoulModel.LOST_SOUL, LostSoulModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.LOST_SOUL, LostSoulRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(MagmiteModel.MAGMITE, MagmiteModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.MAGMITE, MagmiteRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(PenguinModel.PENGUIN, PenguinModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.PENGUIN, PenguinRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(QueenBeeModel.QUEEN_BEE, QueenBeeModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.QUEEN_BEE, QueenBeeRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(SculkmiteModel.SCULKMITE, SculkmiteModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.SCULKMITE, SculkmiteRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(ShadowCreatureModel.SHADOW_CREATURE, ShadowCreatureModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.SHADOW_CREATURE, ShadowCreatureRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(SoldierBeeModel.SOLDIER_BEE, SoldierBeeModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.SOLDIER_BEE, SoldierBeeRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(TheGreatHungerModel.THE_GREAT_HUNGER, TheGreatHungerModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.THE_GREAT_HUNGER, TheGreatHungerRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(WarpmiteModel.WARPMITE, WarpmiteModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.WARPMITE, WarpmiteRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(WispModel.WISP, WispModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.WISP, WispRenderer::new);

        EntityModelLayerRegistry.registerModelLayer(TestModel.TEST, TestModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.TEST, TestRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(LavaFishModel.LAVA_FISH, LavaFishModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.LAVA_FISH, LavaFishRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(PiranhaModel.PIRANHA, PiranhaModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.PIRANHA, PiranhaRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(KrakenModel.KRAKEN, KrakenModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.KRAKEN, KrakenRenderer::new);
        EntityModelLayerRegistry.registerModelLayer(MagicFlameProjectileModel.MOD_PROJECTILE, MagicFlameProjectileModel::getTexturedModelData);
        EntityRendererRegistry.register(ModEntities.MOD_PROJECTILE, MagicFlameProjectileRenderer::new);

        KeyInputHandler.register();
        ModNetworking.registerS2CPackets();

        ParticleFactoryRegistry.getInstance().register(ModParticleTypes.PURPLE_FLAME, PurpleFlame.Factory::new);
    }
}
