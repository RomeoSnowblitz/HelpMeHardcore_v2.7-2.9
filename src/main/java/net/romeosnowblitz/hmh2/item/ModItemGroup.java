package net.romeosnowblitz.hmh2.item;

import net.fabricmc.fabric.api.itemgroup.v1.FabricItemGroup;
import net.minecraft.block.Blocks;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.registry.RegistryKey;
import net.minecraft.registry.RegistryKeys;
import net.minecraft.text.Text;
import net.minecraft.util.Identifier;
import net.romeosnowblitz.hmh2.Hmh2;
import net.romeosnowblitz.hmh2.block.*;

public class ModItemGroup {

    public static RegistryKey<ItemGroup> COLORING = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "coloring"));
    public static RegistryKey<ItemGroup> DECORATION  = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "decoration"));
    public static RegistryKey<ItemGroup> ITEMS  = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "items"));
    public static RegistryKey<ItemGroup> MAGIC  = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "magic"));
    public static RegistryKey<ItemGroup> MOD  = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "mod"));
    public static RegistryKey<ItemGroup> SUSTENANCE  = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "sustenance"));
    public static RegistryKey<ItemGroup> TESTING  = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "testing"));
    public static RegistryKey<ItemGroup> WARFARE  = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "warfare"));
    public static RegistryKey<ItemGroup> WOODWORKS  = RegistryKey.of(RegistryKeys.ITEM_GROUP, new Identifier(Hmh2.MOD_ID, "woodworks"));

    public static void registerItemGroup() {
        Registry.register(Registries.ITEM_GROUP, ITEMS, FabricItemGroup.builder().displayName(Text.translatable("Items"))
                .icon(() -> new ItemStack(ModItems.ITEM)).entries((context, entries) -> {
                    entries.add(ModItems.NULL_PASSER);
                    entries.add(ModItems.DISC_FRAGMENT);
                    entries.add(ModItems.SUN_SEEKER);
                    entries.add(ModItems.SUN_STONE);
                    entries.add(ModItems.SOLAR_FRAGMENT);
                    entries.add(ModItems.REVIVAL_INGOT);
                    entries.add(ModItems.REVIVAL_STONE);
                    entries.add(ModItems.UNIVERSAL_REVIVAL_STONE);
                    entries.add(ModItems.WITHER_BONE);
                    entries.add(ModItems.GLUE);
                    entries.add(ModItems.FLOUR);
                    entries.add(ModItems.CORK);
                    entries.add(ModItems.GRAPHITE);
                    entries.add(ModItems.HELLSTONE);
                    entries.add(ModItems.LUCKY_PIECE);
                    entries.add(ModItems.QUAERITE_FRAGMENT);
                    entries.add(ModItems.RAW_PLATINUM);
                    entries.add(ModItems.RAW_SILVER);
                    entries.add(ModItems.RAW_TIN);
                    entries.add(ModItems.RAW_TITANIUM);
                    entries.add(ModItems.SALT);
                    entries.add(ModItems.BURNT_EGGSHELL);
                    entries.add(ModItems.ASHES);
                    entries.add(ModItems.ASH_CREAM);
                    entries.add(ModItems.HEAVY_CREAM);
                    entries.add(ModItems.PLASTIC);
                    entries.add(ModItems.RESIN);
                    entries.add(ModItems.PLATINUM_INGOT);
                    entries.add(ModItems.SILVER_INGOT);
                    entries.add(ModItems.TIN_INGOT);
                    entries.add(ModItems.TITANIUM_INGOT);
                    entries.add(ModItems.BRONZE_INGOT);
                    entries.add(ModItems.BUTTER);
                    entries.add(ModItems.MYSTERIOUS_WHITE_DEBRIS);
                    entries.add(ModItems.MYSTERIOUS_YELLOW_DEBRIS);
                    entries.add(ModItems.MYSTERIOUS_CYAN_DEBRIS);
                    entries.add(ModItems.MYSTERIOUS_MAGENTA_DEBRIS);
                    entries.add(ModItems.HOOF);
                    entries.add(ModItems.FUR_PELT);
                    entries.add(ModItems.POISON_SAC);
                    entries.add(ModItems.RENNET);
                    entries.add(ModBlocks.BANANA_PEEL);
                    entries.add(ModItems.BONE_PLATE);
                    entries.add(ModItems.CHAINED_MESH);
                    entries.add(ModItems.CLOTH);
                    entries.add(ModItems.WAXED_CLOTH);
                    entries.add(ModItems.HOOF_POWDER);
                    entries.add(ModItems.CONE);
                    entries.add(ModItems.ENDER_SHARD);
                    entries.add(ModItems.ENDER_DUST);
                    entries.add(ModItems.ENDER_INGOT);
                    entries.add(ModItems.FROZEN_MILK);
                    entries.add(ModItems.ITEM);
                    entries.add(ModItems.OIL_BALL);
                    entries.add(ModItems.PENCIL);
                    entries.add(ModItems.SILK);
                    entries.add(ModItems.SHEET_PAN);
                    entries.add(ModItems.VEGAN_LEATHER);
                    entries.add(ModItems.WOODED_DIAMOND);
                    entries.add(ModItems.GRANNY_LOTION);
                    entries.add(ModItems.ROSE_DYE);
                    entries.add(ModItems.ULTRAMARINE_DYE);
                    entries.add(ModItems.NEW_GREEN_DYE);
                    entries.add(ModItems.SPRING_GREEN_DYE);
                    entries.add(ModItems.VIOLET_DYE);
                    entries.add(ModItems.MIDAS_SEEDS);
                    entries.add(ModItems.CHOCOLATE_MILK);
                    entries.add(ModItems.HEATED_OIL_BUCKET);
                    entries.add(ModItems.HONEY_BUCKET);
                    entries.add(ModItems.OIL_BUCKET);
                    entries.add(ModItems.QUICKSAND_BUCKET);
                    entries.add(ModItems.ASHMITE_SPAWN_EGG);
                    entries.add(ModItems.BLAZING_INFERNO_SPAWN_EGG);
                    entries.add(ModItems.BLOODMITE_SPAWN_EGG);
                    entries.add(ModItems.CAL_SPAWN_EGG);
                    entries.add(ModItems.DEMON_SPAWN_EGG);
                    entries.add(ModItems.LOST_SOUL_SPAWN_EGG);
                    entries.add(ModItems.HEADLESS_HORSEMAN_SPAWN_EGG);
                    entries.add(ModItems.HELLMITE_SPAWN_EGG);
                    entries.add(ModItems.MAGMITE_SPAWN_EGG);
                    entries.add(ModItems.PENGUIN_SPAWN_EGG);
                    entries.add(ModItems.QUEEN_BEE_SPAWN_EGG);
                    entries.add(ModItems.SCULKMITE_SPAWN_EGG);
                    entries.add(ModItems.SHADOW_CREATURE_SPAWN_EGG);
                    entries.add(ModItems.SOLDIER_BEE_SPAWN_EGG);
                    entries.add(ModItems.THE_GREAT_HUNGER_SPAWN_EGG);
                    entries.add(ModItems.WARPMITE_SPAWN_EGG);
                    entries.add(ModItems.WISP_SPAWN_EGG);
                    entries.add(ModItems.BLAZESTEP_DISC);
                    entries.add(ModItems.DARKNESS_DISC);
                    entries.add(ModItems.FORTRESS_DISC);
                    entries.add(ModItems.GAME_OVER_DISC);
                    entries.add(ModItems.VOID_DISC);
                }).build());


        Registry.register(Registries.ITEM_GROUP, MOD, FabricItemGroup.builder().displayName(Text.translatable("Mod"))
                .icon(() -> new ItemStack(ModBlocks.BLOCK)).entries((context, entries) -> {
                    entries.add(ModBlocks.SAND_SCULK);
                    entries.add(ModBlocks.PEAT);
                    entries.add(ModBlocks.GLUEY_PISTON);
                    entries.add(ModBlocks.ICED_BUCKET);
                    entries.add(ModBlocks.BLOCK);
                    entries.add(ModBlocks.END_CRYSTAL_BLOCK);
                    entries.add(ModBlocks.LUCKY_BLOCK);
                    entries.add(ModBlocks.LUCKY_ITEM);
                    entries.add(ModBlocks.CRIMSON_FARMLAND);
                    entries.add(ModBlocks.WARPED_FARMLAND);
                    entries.add(ModBlocks.CARVED_MELON);
                    entries.add(ModBlocks.POISON_GRASS);
                    entries.add(ModBlocks.ASH_BLOCK);
                    entries.add(ModBlocks.BEEF_ORE);
                    entries.add(ModBlocks.CHICKEN_NUGGET_ORE);
                    entries.add(ModBlocks.DEEPSLATE_SILVER_ORE);
                    entries.add(ModBlocks.DEEPSLATE_TIN_ORE);
                    entries.add(ModBlocks.GRAPHITE_BLOCK);
                    entries.add(ModBlocks.LIFE_ORE);
                    entries.add(ModBlocks.HELLSTONE_BLOCK);
                    entries.add(ModBlocks.RAW_PLATINUM_BLOCK);
                    entries.add(ModBlocks.QUAERITE);
                    entries.add(ModBlocks.RAW_BEEF_ORE);
                    entries.add(ModBlocks.RAW_CHICKEN_NUGGET_ORE);
                    entries.add(ModBlocks.SILVER_ORE);
                    entries.add(ModBlocks.TIN_ORE);
                    entries.add(ModBlocks.RAW_TITANIUM_BLOCK);
                    entries.add(ModBlocks.CHICKEN_BLOCK);
                    entries.add(ModBlocks.CHICKEN_SLAB);
                    entries.add(ModBlocks.RAW_CHICKEN_BLOCK);
                    entries.add(ModBlocks.RAW_CHICKEN_SLAB);
                    entries.add(ModBlocks.BEEF_BLOCK);
                    entries.add(ModBlocks.BEEF_SLAB);
                    entries.add(ModBlocks.RAW_BEEF_BLOCK);
                    entries.add(ModBlocks.RAW_BEEF_SLAB);
                    entries.add(ModBlocks.INFESTED_MAGMA_BLOCK);
                    entries.add(ModBlocks.INFESTED_SCULK_BLOCK);
                    entries.add(ModBlocks.INFESTED_NETHERRACK_BLOCK);
                    entries.add(ModBlocks.INFESTED_HONEYCOMB_BLOCK);
                    entries.add(ModBlocks.HONEY_HIVE);
                    entries.add(ModBlocks.ROYAL_JELLY);
                }).build());

        Registry.register(Registries.ITEM_GROUP, MAGIC, FabricItemGroup.builder().displayName(Text.translatable("Magic"))
                .icon(() -> new ItemStack(MagicItems.KNIGHT_CHARM)).entries((context, entries) -> {
                    entries.add(MagicBlocks.AMBER_ORE);
                    entries.add(MagicBlocks.ANDALUSITE_ORE);
                    entries.add(MagicBlocks.AQUAMARINE_ORE);
                    entries.add(MagicBlocks.CHARCOAL_ORE);
                    entries.add(MagicBlocks.CITRINE_ORE);
                    entries.add(MagicBlocks.DIOPSIDE_ORE);
                    entries.add(MagicBlocks.GARNET_ORE);
                    entries.add(MagicBlocks.HESSONITE_ORE);
                    entries.add(MagicBlocks.MALICHITE_ORE);
                    entries.add(MagicBlocks.MOONSTONE_ORE);
                    entries.add(MagicBlocks.OPAL_ORE);
                    entries.add(MagicBlocks.PERIDOT_ORE);
                    entries.add(MagicBlocks.PREHNITE_ORE);
                    entries.add(MagicBlocks.RUBY_ORE);
                    entries.add(MagicBlocks.SAPPHIRE_ORE);
                    entries.add(MagicBlocks.SMOKY_QUARTZ_ORE);
                    entries.add(MagicBlocks.SPESSARITE_ORE);
                    entries.add(MagicBlocks.SPHENE_ORE);
                    entries.add(MagicBlocks.SPINEL_ORE);
                    entries.add(MagicBlocks.TANZANITE_ORE);
                    entries.add(MagicBlocks.TOPAZ_ORE);
                    entries.add(MagicBlocks.TORMALINE_ORE);
                    entries.add(MagicBlocks.TSAVORITE_ORE);
                    entries.add(MagicBlocks.ZIRCON_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_AMBER_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_ANDALUSITE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_AQUAMARINE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_CHARCOAL_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_CITRINE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_DIOPSIDE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_GARNET_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_HESSONITE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_MALICHITE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_MOONSTONE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_OPAL_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_PERIDOT_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_PREHNITE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_RUBY_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_SAPPHIRE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_SMOKY_QUARTZ_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_SPESSARITE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_SPHENE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_SPINEL_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_TANZANITE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_TOPAZ_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_TORMALINE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_TSAVORITE_ORE);
                    entries.add(MagicBlocks.DEEPSLATE_ZIRCON_ORE);
                    entries.add(MagicItems.AMBER);
                    entries.add(MagicItems.ANDALUSITE);
                    entries.add(MagicItems.AQUAMARINE);
                    entries.add(MagicItems.CITRINE);
                    entries.add(MagicItems.DIOPSIDE);
                    entries.add(MagicItems.GARNET);
                    entries.add(MagicItems.HESSONITE);
                    entries.add(MagicItems.MALICHITE);
                    entries.add(MagicItems.MOONSTONE);
                    entries.add(MagicItems.OPAL);
                    entries.add(MagicItems.PERIDOT);
                    entries.add(MagicItems.PREHNITE);
                    entries.add(MagicItems.RUBY);
                    entries.add(MagicItems.SAPPHIRE);
                    entries.add(MagicItems.SMOKY_QUARTZ);
                    entries.add(MagicItems.SPESSARITE);
                    entries.add(MagicItems.SPHENE);
                    entries.add(MagicItems.SPINEL);
                    entries.add(MagicItems.TANZANITE);
                    entries.add(MagicItems.TOPAZ);
                    entries.add(MagicItems.TORMALINE);
                    entries.add(MagicItems.TSAVORITE);
                    entries.add(MagicItems.ZIRCON);
                    entries.add(MagicBlocks.AMBER_BLOCK);
                    entries.add(MagicBlocks.ANDALUSITE_BLOCK);
                    entries.add(MagicBlocks.AQUAMARINE_BLOCK);
                    entries.add(MagicBlocks.CITRINE_BLOCK);
                    entries.add(MagicBlocks.DIOPSIDE_BLOCK);
                    entries.add(MagicBlocks.GARNET_BLOCK);
                    entries.add(MagicBlocks.HESSONITE_BLOCK);
                    entries.add(MagicBlocks.MALICHITE_BLOCK);
                    entries.add(MagicBlocks.MOONSTONE_BLOCK);
                    entries.add(MagicBlocks.OPAL_BLOCK);
                    entries.add(MagicBlocks.PERIDOT_BLOCK);
                    entries.add(MagicBlocks.PREHNITE_BLOCK);
                    entries.add(MagicBlocks.RUBY_BLOCK);
                    entries.add(MagicBlocks.SAPPHIRE_BLOCK);
                    entries.add(MagicBlocks.SMOKY_QUARTZ_BLOCK);
                    entries.add(MagicBlocks.SPESSARITE_BLOCK);
                    entries.add(MagicBlocks.SPHENE_BLOCK);
                    entries.add(MagicBlocks.SPINEL_BLOCK);
                    entries.add(MagicBlocks.TANZANITE_BLOCK);
                    entries.add(MagicBlocks.TOPAZ_BLOCK);
                    entries.add(MagicBlocks.TORMALINE_BLOCK);
                    entries.add(MagicBlocks.TSAVORITE_BLOCK);
                    entries.add(MagicBlocks.ZIRCON_BLOCK);
                    entries.add(MagicBlocks.AMBER_DUST);
                    entries.add(MagicBlocks.ANDALUSITE_DUST);
                    entries.add(MagicBlocks.AQUAMARINE_DUST);
                    entries.add(MagicBlocks.CHARCOAL_DUST);
                    entries.add(MagicBlocks.CITRINE_DUST);
                    entries.add(MagicBlocks.DIOPSIDE_DUST);
                    entries.add(MagicBlocks.GARNET_DUST);
                    entries.add(MagicBlocks.HESSONITE_DUST);
                    entries.add(MagicBlocks.MALICHITE_DUST);
                    entries.add(MagicBlocks.MOONSTONE_DUST);
                    entries.add(MagicBlocks.OPAL_DUST);
                    entries.add(MagicBlocks.PERIDOT_DUST);
                    entries.add(MagicBlocks.PREHNITE_DUST);
                    entries.add(MagicBlocks.RUBY_DUST);
                    entries.add(MagicBlocks.SAPPHIRE_DUST);
                    entries.add(MagicBlocks.SMOKY_QUARTZ_DUST);
                    entries.add(MagicBlocks.SPESSARITE_DUST);
                    entries.add(MagicBlocks.SPHENE_DUST);
                    entries.add(MagicBlocks.SPINEL_DUST);
                    entries.add(MagicBlocks.TANZANITE_DUST);
                    entries.add(MagicBlocks.TOPAZ_DUST);
                    entries.add(MagicBlocks.TORMALINE_DUST);
                    entries.add(MagicBlocks.TSAVORITE_DUST);
                    entries.add(MagicBlocks.ZIRCON_DUST);
                    entries.add(MagicBlocks.AMETHYST_DUST);
                    entries.add(MagicBlocks.COAL_DUST);
                    entries.add(MagicBlocks.IRON_DUST);
                    entries.add(MagicBlocks.COPPER_DUST);
                    entries.add(MagicBlocks.GOLD_DUST);
                    entries.add(MagicBlocks.EMERALD_DUST);
                    entries.add(MagicBlocks.LAPIS_DUST);
                    entries.add(MagicBlocks.DIAMOND_DUST);
                    entries.add(MagicBlocks.FLINT_DUST);
                    entries.add(MagicItems.ABSORPTION_FLUID);
                    entries.add(MagicItems.BAD_LUCK_FLUID);
                    entries.add(MagicItems.BAD_OMEN_FLUID);
                    entries.add(MagicItems.BLINDNESS_FLUID);
                    entries.add(MagicItems.CONDUIT_POWER_FLUID);
                    entries.add(MagicItems.DARKNESS_FLUID);
                    entries.add(MagicItems.DOLPHINS_GRACE_FLUID);
                    entries.add(MagicItems.FIRE_IMMUNITY_FLUID);
                    entries.add(MagicItems.GLOWING_FLUID);
                    entries.add(MagicItems.HASTE_FLUID);
                    entries.add(MagicItems.HEALTH_BOOST_FLUID);
                    entries.add(MagicItems.HUNGER_FLUID);
                    entries.add(MagicItems.INVISIBILITY_FLUID);
                    entries.add(MagicItems.JUMP_BOOST_FLUID);
                    entries.add(MagicItems.LEVITATION_FLUID);
                    entries.add(MagicItems.LUCK_FLUID);
                    entries.add(MagicItems.MINING_FATIGUE_FLUID);
                    entries.add(MagicItems.NAUSEA_FLUID);
                    entries.add(MagicItems.NIGHT_VISION_FLUID);
                    entries.add(MagicItems.POISON_FLUID);
                    entries.add(MagicItems.REGENERATION_FLUID);
                    entries.add(MagicItems.RESISTANCE_FLUID);
                    entries.add(MagicItems.SATURATION_FLUID);
                    entries.add(MagicItems.SLOW_FALLING_FLUID);
                    entries.add(MagicItems.SLOWNESS_FLUID);
                    entries.add(MagicItems.SPEED_FLUID);
                    entries.add(MagicItems.STRENGTH_FLUID);
                    entries.add(MagicItems.VILLAGE_HERO_FLUID);
                    entries.add(MagicItems.WATER_BREATHING_FLUID);
                    entries.add(MagicItems.WEAKNESS_FLUID);
                    entries.add(MagicItems.WITHER_FLUID);
                    entries.add(MagicItems.LOCKET);
                    entries.add(MagicItems.AMULET);
                    entries.add(MagicItems.SPEED_AMULET);
                    entries.add(MagicItems.LEVITATION_AMULET);
                    entries.add(MagicItems.MINING_FATIGUE_AMULET);
                    entries.add(MagicItems.UNLUCK_AMULET);
                    entries.add(MagicItems.NAUSEA_AMULET);
                    entries.add(MagicItems.WATER_BREATHING_AMULET);
                    entries.add(MagicItems.INVISIBILITY_AMULET);
                    entries.add(MagicItems.BLINDNESS_AMULET);
                    entries.add(MagicItems.LUCK_AMULET);
                    entries.add(MagicItems.WITHER_AMULET);
                    entries.add(MagicItems.ABSORPTION_AMULET);
                    entries.add(MagicItems.HASTE_AMULET);
                    entries.add(MagicItems.HEALTH_BOOST_AMULET);
                    entries.add(MagicItems.FIRE_IMMUNITY_AMULET);
                    entries.add(MagicItems.WEAKNESS_AMULET);
                    entries.add(MagicItems.CONDUIT_POWER_AMULET);
                    entries.add(MagicItems.HUNGER_AMULET);
                    entries.add(MagicItems.REGENERATION_AMULET);
                    entries.add(MagicItems.STRENGTH_AMULET);
                    entries.add(MagicItems.GLOWING_AMULET);
                    entries.add(MagicItems.JUMP_BOOST_AMULET);
                    entries.add(MagicItems.NIGHT_VISION_AMULET);
                    entries.add(MagicItems.SATURATION_AMULET);
                    entries.add(MagicItems.DOLPHINS_GRACE_AMULET);
                    entries.add(MagicItems.BAD_OMEN_AMULET);
                    entries.add(MagicItems.DARKNESS_AMULET);
                    entries.add(MagicItems.RESISTANCE_AMULET);
                    entries.add(MagicItems.POISON_AMULET);
                    entries.add(MagicItems.SLOW_FALLING_AMULET);
                    entries.add(MagicItems.SLOWNESS_AMULET);
                    entries.add(MagicItems.VILLAGE_HERO_AMULET);
                    entries.add(MagicItems.FIGHT_CHARM);
                    entries.add(MagicItems.LIGHT_CHARM);
                    entries.add(MagicItems.MIGHT_CHARM);
                    entries.add(MagicItems.SIGHT_CHARM);
                    entries.add(MagicItems.FLIGHT_CHARM);
                    entries.add(MagicItems.SLIGHT_CHARM);
                    entries.add(MagicItems.ALIGHT_CHARM);
                    entries.add(MagicItems.BLIGHT_CHARM);
                    entries.add(MagicItems.BRIGHT_CHARM);
                    entries.add(MagicItems.FRIGHT_CHARM);
                    entries.add(MagicItems.KNIGHT_CHARM);
                    entries.add(ModItems.WARPED_WART);
                    entries.add(MagicItems.SOUL_ESSENCE);
                    entries.add(MagicItems.SUMMONING_POWDER);
                    entries.add(MagicItems.BLUE_MAGIC_PASTE);
                    entries.add(MagicItems.PURPLE_MAGIC_PASTE);
                }).build());

        Registry.register(Registries.ITEM_GROUP, WARFARE, FabricItemGroup.builder().displayName(Text.translatable("Warfare"))
                .icon(() -> new ItemStack(WarfareItems.FIREBRAND)).entries((context, entries) -> {
                    entries.add(WarfareItems.BANANA_HELMET);
                    entries.add(WarfareItems.BANANA_CHESTPLATE);
                    entries.add(WarfareItems.BANANA_LEGGINGS);
                    entries.add(WarfareItems.BANANA_BOOTS);
                    entries.add(WarfareItems.BANANA_HORSE_ARMOR);
                    entries.add(WarfareItems.BANANA_PICKAXE);
                    entries.add(WarfareItems.QUEEN_BEE_HELMET);
                    entries.add(WarfareItems.QUEEN_BEE_CHESTPLATE);
                    entries.add(WarfareItems.QUEEN_BEE_LEGGINGS);
                    entries.add(WarfareItems.QUEEN_BEE_BOOTS);
                    entries.add(WarfareItems.QUEEN_BEE_STINGER);
                    entries.add(WarfareItems.BONE_HELMET);
                    entries.add(WarfareItems.BONE_CHESTPLATE);
                    entries.add(WarfareItems.BONE_LEGGINGS);
                    entries.add(WarfareItems.BONE_BOOTS);
                    entries.add(WarfareItems.BONE_SWORD);
                    entries.add(WarfareItems.BONE_PICKAXE);
                    entries.add(WarfareItems.BONE_AXE);
                    entries.add(WarfareItems.BONE_SHOVEL);
                    entries.add(WarfareItems.BONE_HOE);
                    entries.add(WarfareItems.CLOTH_HELMET);
                    entries.add(WarfareItems.CLOTH_CHESTPLATE);
                    entries.add(WarfareItems.CLOTH_LEGGINGS);
                    entries.add(WarfareItems.CLOTH_BOOTS);
                    entries.add(WarfareItems.DRAMAGEON_HELMET);
                    entries.add(WarfareItems.DRAMAGEON_CHESTPLATE);
                    entries.add(WarfareItems.DRAMAGEON_LEGGINGS);
                    entries.add(WarfareItems.DRAMAGEON_BOOTS);
                    entries.add(WarfareItems.DRAMAGEON_SWORD);
                    entries.add(WarfareItems.DRAMAGEON_PICKAXE);
                    entries.add(WarfareItems.DRAMAGEON_AXE);
                    entries.add(WarfareItems.DRAMAGEON_SHOVEL);
                    entries.add(WarfareItems.DRAMAGEON_HOE);
                    entries.add(WarfareItems.EMERALD_HELMET);
                    entries.add(WarfareItems.EMERALD_CHESTPLATE);
                    entries.add(WarfareItems.EMERALD_LEGGINGS);
                    entries.add(WarfareItems.EMERALD_BOOTS);
                    entries.add(WarfareItems.FUR_HELMET);
                    entries.add(WarfareItems.FUR_CHESTPLATE);
                    entries.add(WarfareItems.FUR_LEGGINGS);
                    entries.add(WarfareItems.FUR_BOOTS);
                    entries.add(WarfareItems.GLASS_LEGGINGS);
                    entries.add(WarfareItems.HELLSTONE_HELMET);
                    entries.add(WarfareItems.HELLSTONE_CHESTPLATE);
                    entries.add(WarfareItems.HELLSTONE_LEGGINGS);
                    entries.add(WarfareItems.HELLSTONE_BOOTS);
                    entries.add(WarfareItems.HELLSTONE_AXE);
                    entries.add(WarfareItems.HELLSTONE_HOE);
                    entries.add(WarfareItems.HELLSTONE_SHOVEL);
                    entries.add(WarfareItems.HELLSTONE_SWORD);
                    entries.add(WarfareItems.HELLSTONE_PICKAXE);
                    entries.add(WarfareItems.SUMOLTERITE_HELMET);
                    entries.add(WarfareItems.SUMOLTERITE_CHESTPLATE);
                    entries.add(WarfareItems.SUMOLTERITE_LEGGINGS);
                    entries.add(WarfareItems.SUMOLTERITE_BOOTS);
                    entries.add(WarfareItems.SUMOLTERITE_SWORD);
                    entries.add(WarfareItems.SUMOLTERITE_PICKAXE);
                    entries.add(WarfareItems.SUMOLTERITE_AXE);
                    entries.add(WarfareItems.SUMOLTERITE_HOE);
                    entries.add(WarfareItems.SUMOLTERITE_SHOVEL);
                    entries.add(WarfareItems.WITHER_BONE_HELMET);
                    entries.add(WarfareItems.WITHER_BONE_CHESTPLATE);
                    entries.add(WarfareItems.WITHER_BONE_LEGGINGS);
                    entries.add(WarfareItems.WITHER_BONE_BOOTS);
                    entries.add(WarfareItems.WOODEN_HELMET);
                    entries.add(WarfareItems.WOODEN_CHESTPLATE);
                    entries.add(WarfareItems.WOODEN_LEGGINGS);
                    entries.add(WarfareItems.WOODEN_BOOTS);
                    entries.add(ModItems.PITCHFORK);
                    entries.add(ModItems.HELLFORK);
                    entries.add(ModItems.INFERNAL_DIAMOND);
                    entries.add(ModItems.INFERNAL_HELLFORK);
                    entries.add(WarfareItems.LIFE_HELMET);
                    entries.add(WarfareItems.LIFE_CHESTPLATE);
                    entries.add(WarfareItems.LIFE_LEGGINGS);
                    entries.add(WarfareItems.LIFE_BOOTS);
                    entries.add(WarfareItems.QUAERITE_HELMET);
                    entries.add(WarfareItems.QUAERITE_CHESTPLATE);
                    entries.add(WarfareItems.QUAERITE_LEGGINGS);
                    entries.add(WarfareItems.QUAERITE_BOOTS);
                    entries.add(WarfareItems.QUAERITE_SWORD);
                    entries.add(WarfareItems.QUAERITE_PICKAXE);
                    entries.add(WarfareItems.QUAERITE_AXE);
                    entries.add(WarfareItems.QUAERITE_SHOVEL);
                    entries.add(WarfareItems.QUAERITE_HOE);
                    entries.add(WarfareItems.ANCHOR);
                    entries.add(ModItems.BAMBOO_BOW);
                    entries.add(WarfareItems.BATTLESTAFF);
                    entries.add(WarfareItems.BATTLESTAFF_OF_TERROR);
                    entries.add(WarfareItems.BLAZE_CUTTER);
                    entries.add(WarfareItems.BONECLUB);
                    entries.add(WarfareItems.BROADSWORD);
                    entries.add(WarfareItems.BROKEN_SAWBLADE);
                    entries.add(WarfareItems.CHILL_GALE_KNIFE);
                    entries.add(WarfareItems.CLAYMORE);
                    entries.add(WarfareItems.CLUB);
                    entries.add(WarfareItems.CORAL_BLADE);
                    entries.add(WarfareItems.CUTLASS);
                    entries.add(WarfareItems.BREAD_KNIFE);
                    entries.add(WarfareItems.ENCRUSTED_ANCHOR);
                    entries.add(WarfareItems.ETERNAL_KNIFE);
                    entries.add(WarfareItems.FROST_FANG);
                    entries.add(WarfareItems.FIREBRAND);
                    entries.add(WarfareItems.GLAIVE);
                    entries.add(WarfareItems.GRAVE_BANE);
                    entries.add(WarfareItems.GREAT_AXEBLADE);
                    entries.add(WarfareItems.GROWING_STAFF);
                    entries.add(WarfareItems.HAWKBRAND);
                    entries.add(WarfareItems.HEARTSTEALER);
                    entries.add(WarfareItems.HIGHLAND_AXE);
                    entries.add(WarfareItems.MECHANIZED_SAWBLADE);
                    entries.add(WarfareItems.MOON_DAGGER);
                    entries.add(WarfareItems.NAMELESS_BLADE);
                    entries.add(WarfareItems.NIGHTMARES_BITE);
                    entries.add(WarfareItems.OBSIDIAN_CLAYMORE);
                    entries.add(WarfareItems.RESOLUTE_TEMPEST_KNIFE);
                    entries.add(WarfareItems.SHEER_DAGGER);
                    entries.add(WarfareItems.SICKEL);
                    entries.add(WarfareItems.SOUL_KNIFE);
                    entries.add(WarfareItems.SPONGE_STRIKER);
                    entries.add(WarfareItems.TEMPEST_KNIFE);
                    entries.add(WarfareItems.THE_LAST_LAUGH);
                    entries.add(WarfareItems.THE_STARLESS_NIGHT);
                    entries.add(WarfareItems.TRUTHSEEKER);
                    entries.add(ModItems.UMBRELLA);
                    entries.add(WarfareItems.VENOM_GLAIVE);
                    entries.add(WarfareItems.VINE_WHIP);
                    entries.add(WarfareItems.WHIP);
                }).build());

        Registry.register(Registries.ITEM_GROUP, SUSTENANCE, FabricItemGroup.builder().displayName(Text.translatable("Sustenance"))
                .icon(() -> new ItemStack(SustenanceItems.GOLDEN_SALMON)).entries((context, entries) -> {
                    entries.add(SustenanceItems.APPLE_JUICE);
                    entries.add(SustenanceItems.APPLE_PIE);
                    entries.add(SustenanceItems.BACON);
                    entries.add(SustenanceItems.BANANAS);
                    entries.add(SustenanceItems.BEEF_JERKY);
                    entries.add(SustenanceItems.BLUEBERRIES);
                    entries.add(SustenanceItems.BLUEBERRY_JAM);
                    entries.add(SustenanceItems.BLUEBERRY_PIE);
                    entries.add(SustenanceItems.BURNT_TOAST);
                    entries.add(SustenanceItems.BUTTERED_TOAST);
                    entries.add(SustenanceItems.CHEESE);
                    entries.add(SustenanceItems.CHEESE_SLICE);
                    entries.add(SustenanceItems.CHERRIES);
                    entries.add(SustenanceItems.CHERRY_PIE);
                    entries.add(SustenanceItems.CHICKEN_NUGGET);
                    entries.add(SustenanceItems.CHICKEN_SANDWICH);
                    entries.add(SustenanceItems.CHOCOLATE_ICE_CREAM);
                    entries.add(SustenanceItems.COCOA_POWDER);
                    entries.add(SustenanceItems.DOUGH);
                    entries.add(SustenanceItems.ENDCHILADA);
                    entries.add(ModItems.ENDER_CORN);
                    entries.add(SustenanceItems.GOLDEN_SALMON);
                    entries.add(SustenanceItems.HEART);
                    entries.add(SustenanceItems.LIGHT_TOAST);
                    entries.add(SustenanceItems.MANGO);
                    entries.add(SustenanceItems.ORANGE);
                    entries.add(SustenanceItems.ORANGE_JUICE);
                    entries.add(SustenanceItems.RAW_BACON);
                    entries.add(SustenanceItems.RAW_CHICKEN_NUGGET);
                    entries.add(SustenanceItems.SASHIMI);
                    entries.add(SustenanceItems.SLICED_BREAD);
                    entries.add(SustenanceItems.STRAWBERRIES);
                    entries.add(SustenanceItems.STRAWBERRY_JAM);
                    entries.add(SustenanceItems.STRAWBERRY_PIE);
                    entries.add(SustenanceItems.TOOTHPASTE);
                    entries.add(SustenanceItems.TOAST);
                    entries.add(SustenanceItems.TORTILLA);
                }).build());

        Registry.register(Registries.ITEM_GROUP, COLORING, FabricItemGroup.builder().displayName(Text.translatable("Coloring"))
                .icon(() -> new ItemStack(ModItems.ULTRAMARINE_DYE)).entries((context, entries) -> {
                    entries.add(ColoringBlocks.BLUE_SPIDER_LILY);
                    entries.add(ColoringBlocks.ULTRAMARINE_CANDLE);
                    entries.add(ColoringBlocks.ULTRAMARINE_CARPET);
                    entries.add(ColoringBlocks.ULTRAMARINE_CONCRETE);
                    entries.add(ColoringBlocks.ULTRAMARINE_CONCRETE_POWDER);
                    entries.add(ColoringBlocks.ULTRAMARINE_GLAZED_TERRACOTTA);
                    entries.add(ColoringBlocks.ULTRAMARINE_STAINED_GLASS);
                    entries.add(ColoringBlocks.ULTRAMARINE_STAINED_GLASS_PANE);
                    entries.add(ColoringBlocks.ULTRAMARINE_TERRACOTTA);
                    entries.add(ColoringBlocks.ULTRAMARINE_WOOL);
                    entries.add(ColoringBlocks.ROSE);
                    entries.add(ColoringBlocks.ROSE_CANDLE);
                    entries.add(ColoringBlocks.ROSE_CARPET);
                    entries.add(ColoringBlocks.ROSE_CONCRETE);
                    entries.add(ColoringBlocks.ROSE_CONCRETE_POWDER);
                    entries.add(ColoringBlocks.ROSE_GLAZED_TERRACOTTA);
                    entries.add(ColoringBlocks.ROSE_STAINED_GLASS);
                    entries.add(ColoringBlocks.ROSE_STAINED_GLASS_PANE);
                    entries.add(ColoringBlocks.ROSE_TERRACOTTA);
                    entries.add(ColoringBlocks.ROSE_WOOL);
                    entries.add(ColoringBlocks.WOLFSBANE);
                    entries.add(ColoringBlocks.VIOLET_CANDLE);
                    entries.add(ColoringBlocks.VIOLET_CARPET);
                    entries.add(ColoringBlocks.VIOLET_CONCRETE);
                    entries.add(ColoringBlocks.VIOLET_CONCRETE_POWDER);
                    entries.add(ColoringBlocks.VIOLET_GLAZED_TERRACOTTA);
                    entries.add(ColoringBlocks.VIOLET_STAINED_GLASS);
                    entries.add(ColoringBlocks.VIOLET_STAINED_GLASS_PANE);
                    entries.add(ColoringBlocks.VIOLET_TERRACOTTA);
                    entries.add(ColoringBlocks.VIOLET_WOOL);
                    entries.add(ColoringBlocks.NEW_GREEN_CANDLE);
                    entries.add(ColoringBlocks.NEW_GREEN_CARPET);
                    entries.add(ColoringBlocks.NEW_GREEN_CONCRETE);
                    entries.add(ColoringBlocks.NEW_GREEN_CONCRETE_POWDER);
                    entries.add(ColoringBlocks.NEW_GREEN_GLAZED_TERRACOTTA);
                    entries.add(ColoringBlocks.NEW_GREEN_STAINED_GLASS);
                    entries.add(ColoringBlocks.NEW_GREEN_STAINED_GLASS_PANE);
                    entries.add(ColoringBlocks.NEW_GREEN_TERRACOTTA);
                    entries.add(ColoringBlocks.NEW_GREEN_WOOL);
                    entries.add(ColoringBlocks.SPRING_GREEN_CANDLE);
                    entries.add(ColoringBlocks.SPRING_GREEN_CARPET);
                    entries.add(ColoringBlocks.SPRING_GREEN_CONCRETE);
                    entries.add(ColoringBlocks.SPRING_GREEN_CONCRETE_POWDER);
                    entries.add(ColoringBlocks.SPRING_GREEN_GLAZED_TERRACOTTA);
                    entries.add(ColoringBlocks.SPRING_GREEN_STAINED_GLASS);
                    entries.add(ColoringBlocks.SPRING_GREEN_STAINED_GLASS_PANE);
                    entries.add(ColoringBlocks.SPRING_GREEN_TERRACOTTA);
                    entries.add(ColoringBlocks.SPRING_GREEN_WOOL);
                }).build());

        Registry.register(Registries.ITEM_GROUP, WOODWORKS, FabricItemGroup.builder().displayName(Text.translatable("Woodworks"))
                .icon(() -> new ItemStack(WoodworkBlocks.CHERRY_SAPLING)).entries((context, entries) -> {
                    entries.add(WoodworkBlocks.BANANA_SAPLING);
                    entries.add(WoodworkBlocks.BANANA_LOG);
                    entries.add(WoodworkBlocks.BANANA_LEAVES);
                    entries.add(WoodworkBlocks.BANANA_PLANKS);
                    entries.add(WoodworkBlocks.BANANA_WOOD);
                    entries.add(WoodworkBlocks.STRIPPED_BANANA_LOG);
                    entries.add(WoodworkBlocks.STRIPPED_BANANA_WOOD);
                    entries.add(WoodworkBlocks.BANANA_SLAB);
                    entries.add(WoodworkBlocks.BANANA_STAIRS);
                    entries.add(WoodworkBlocks.BANANA_DOOR);
                    entries.add(WoodworkBlocks.BANANA_TRAPDOOR);
                    entries.add(WoodworkBlocks.BANANA_BUTTON);
                    entries.add(WoodworkBlocks.BANANA_PRESSURE_PLATE);
                    entries.add(WoodworkBlocks.BANANA_FENCE);
                    entries.add(WoodworkBlocks.BANANA_FENCE_GATE);
                    entries.add(ModItems.BANANA_SIGN);
                    entries.add(ModItems.BANANA_HANGING_SIGN);
                    entries.add(WoodworkBlocks.CHERRY_SAPLING);
                    entries.add(WoodworkBlocks.CHERRY_LOG);
                    entries.add(WoodworkBlocks.CHERRY_LEAVES);
                    entries.add(WoodworkBlocks.CHERRY_PLANKS);
                    entries.add(WoodworkBlocks.CHERRY_WOOD);
                    entries.add(WoodworkBlocks.STRIPPED_CHERRY_LOG);
                    entries.add(WoodworkBlocks.STRIPPED_CHERRY_WOOD);
                    entries.add(WoodworkBlocks.CHERRY_SLAB);
                    entries.add(WoodworkBlocks.CHERRY_STAIRS);
                    entries.add(WoodworkBlocks.CHERRY_DOOR);
                    entries.add(WoodworkBlocks.CHERRY_TRAPDOOR);
                    entries.add(WoodworkBlocks.CHERRY_BUTTON);
                    entries.add(WoodworkBlocks.CHERRY_PRESSURE_PLATE);
                    entries.add(WoodworkBlocks.CHERRY_FENCE);
                    entries.add(WoodworkBlocks.CHERRY_FENCE_GATE);
                    entries.add(ModItems.CHERRY_SIGN);
                    entries.add(ModItems.CHERRY_HANGING_SIGN);
                    entries.add(WoodworkBlocks.CORK_OAK_SAPLING);
                    entries.add(WoodworkBlocks.CORK_OAK_LOG);
                    entries.add(WoodworkBlocks.CORK_OAK_LEAVES);
                    entries.add(WoodworkBlocks.CORK_OAK_PLANKS);
                    entries.add(WoodworkBlocks.CORK_OAK_WOOD);
                    entries.add(WoodworkBlocks.STRIPPED_CORK_OAK_LOG);
                    entries.add(WoodworkBlocks.STRIPPED_CORK_OAK_WOOD);
                    entries.add(WoodworkBlocks.CORK_OAK_SLAB);
                    entries.add(WoodworkBlocks.CORK_OAK_STAIRS);
                    entries.add(WoodworkBlocks.CORK_OAK_DOOR);
                    entries.add(WoodworkBlocks.CORK_OAK_TRAPDOOR);
                    entries.add(WoodworkBlocks.CORK_OAK_BUTTON);
                    entries.add(WoodworkBlocks.CORK_OAK_PRESSURE_PLATE);
                    entries.add(WoodworkBlocks.CORK_OAK_FENCE);
                    entries.add(WoodworkBlocks.CORK_OAK_FENCE_GATE);
                    entries.add(ModItems.CORK_OAK_SIGN);
                    entries.add(ModItems.CORK_OAK_HANGING_SIGN);
                    entries.add(WoodworkBlocks.JACARANDA_SAPLING);
                    entries.add(WoodworkBlocks.JACARANDA_LOG);
                    entries.add(WoodworkBlocks.JACARANDA_LEAVES);
                    entries.add(WoodworkBlocks.JACARANDA_PLANKS);
                    entries.add(WoodworkBlocks.JACARANDA_WOOD);
                    entries.add(WoodworkBlocks.STRIPPED_JACARANDA_LOG);
                    entries.add(WoodworkBlocks.STRIPPED_JACARANDA_WOOD);
                    entries.add(WoodworkBlocks.JACARANDA_SLAB);
                    entries.add(WoodworkBlocks.JACARANDA_STAIRS);
                    entries.add(WoodworkBlocks.JACARANDA_DOOR);
                    entries.add(WoodworkBlocks.JACARANDA_TRAPDOOR);
                    entries.add(WoodworkBlocks.JACARANDA_BUTTON);
                    entries.add(WoodworkBlocks.JACARANDA_PRESSURE_PLATE);
                    entries.add(WoodworkBlocks.JACARANDA_FENCE);
                    entries.add(WoodworkBlocks.JACARANDA_FENCE_GATE);
                    entries.add(ModItems.JACARANDA_SIGN);
                    entries.add(ModItems.JACARANDA_HANGING_SIGN);
                    entries.add(WoodworkBlocks.MAHOE_SAPLING);
                    entries.add(WoodworkBlocks.MAHOE_LOG);
                    entries.add(WoodworkBlocks.MAHOE_LEAVES);
                    entries.add(WoodworkBlocks.MAHOE_PLANKS);
                    entries.add(WoodworkBlocks.MAHOE_WOOD);
                    entries.add(WoodworkBlocks.STRIPPED_MAHOE_LOG);
                    entries.add(WoodworkBlocks.STRIPPED_MAHOE_WOOD);
                    entries.add(WoodworkBlocks.MAHOE_SLAB);
                    entries.add(WoodworkBlocks.MAHOE_STAIRS);
                    entries.add(WoodworkBlocks.MAHOE_DOOR);
                    entries.add(WoodworkBlocks.MAHOE_TRAPDOOR);
                    entries.add(WoodworkBlocks.MAHOE_BUTTON);
                    entries.add(WoodworkBlocks.MAHOE_PRESSURE_PLATE);
                    entries.add(WoodworkBlocks.MAHOE_FENCE);
                    entries.add(WoodworkBlocks.MAHOE_FENCE_GATE);
                    entries.add(ModItems.MAHOE_SIGN);
                    entries.add(ModItems.MAHOE_HANGING_SIGN);
                    entries.add(WoodworkBlocks.MANGO_SAPLING);
                    entries.add(WoodworkBlocks.MANGO_LOG);
                    entries.add(WoodworkBlocks.MANGO_LEAVES);
                    entries.add(WoodworkBlocks.MANGO_PLANKS);
                    entries.add(WoodworkBlocks.MANGO_WOOD);
                    entries.add(WoodworkBlocks.STRIPPED_MANGO_LOG);
                    entries.add(WoodworkBlocks.STRIPPED_MANGO_WOOD);
                    entries.add(WoodworkBlocks.MANGO_SLAB);
                    entries.add(WoodworkBlocks.MANGO_STAIRS);
                    entries.add(WoodworkBlocks.MANGO_DOOR);
                    entries.add(WoodworkBlocks.MANGO_TRAPDOOR);
                    entries.add(WoodworkBlocks.MANGO_BUTTON);
                    entries.add(WoodworkBlocks.MANGO_PRESSURE_PLATE);
                    entries.add(WoodworkBlocks.MANGO_FENCE);
                    entries.add(WoodworkBlocks.MANGO_FENCE_GATE);
                    entries.add(ModItems.MANGO_SIGN);
                    entries.add(ModItems.MANGO_HANGING_SIGN);
                    entries.add(WoodworkBlocks.WILLOW_SAPLING);
                    entries.add(WoodworkBlocks.WILLOW_LOG);
                    entries.add(WoodworkBlocks.WILLOW_LEAVES);
                    entries.add(WoodworkBlocks.WILLOW_PLANKS);
                    entries.add(WoodworkBlocks.WILLOW_WOOD);
                    entries.add(WoodworkBlocks.STRIPPED_WILLOW_LOG);
                    entries.add(WoodworkBlocks.STRIPPED_WILLOW_WOOD);
                    entries.add(WoodworkBlocks.WILLOW_SLAB);
                    entries.add(WoodworkBlocks.WILLOW_STAIRS);
                    entries.add(WoodworkBlocks.WILLOW_DOOR);
                    entries.add(WoodworkBlocks.WILLOW_TRAPDOOR);
                    entries.add(WoodworkBlocks.WILLOW_BUTTON);
                    entries.add(WoodworkBlocks.WILLOW_PRESSURE_PLATE);
                    entries.add(WoodworkBlocks.WILLOW_FENCE);
                    entries.add(WoodworkBlocks.WILLOW_FENCE_GATE);
                    entries.add(ModItems.WILLOW_SIGN);
                    entries.add(ModItems.WILLOW_HANGING_SIGN);
                    entries.add(WoodworkBlocks.UNBREAKABLE_BLOCK);
                    entries.add(WoodworkBlocks.UNBREAKABLE_LEAVES);
                }).build());

        Registry.register(Registries.ITEM_GROUP, DECORATION, FabricItemGroup.builder().displayName(Text.translatable("Decoration"))
                .icon(() -> new ItemStack(DecorationBlocks.MARBLE_BRICKS)).entries((context, entries) -> {
                    entries.add(ModItems.LAMP_TORCH_ITEM);
                    entries.add(DecorationBlocks.CORK_BLOCK);
                    entries.add(DecorationBlocks.CORK_STAIRS);
                    entries.add(DecorationBlocks.CORK_SLAB);
                    entries.add(DecorationBlocks.CORK_WALL);
                    //entries.add(DecorationBlocks.CORK_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.CORK_BRICKS);
                    entries.add(DecorationBlocks.CORK_BRICK_STAIRS);
                    entries.add(DecorationBlocks.CORK_BRICK_SLAB);
                    entries.add(DecorationBlocks.CORK_BRICK_WALL);
                    entries.add(DecorationBlocks.DIABASE);
                    entries.add(DecorationBlocks.DIABASE_STAIRS);
                    entries.add(DecorationBlocks.DIABASE_SLAB);
                    entries.add(DecorationBlocks.DIABASE_WALL);
                    //entries.add(DecorationBlocks.DIABASE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.DIABASE_BRICKS);
                    entries.add(DecorationBlocks.DIABASE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.DIABASE_BRICK_SLAB);
                    entries.add(DecorationBlocks.DIABASE_BRICK_WALL);
                    entries.add(DecorationBlocks.PUMICE);
                    entries.add(DecorationBlocks.PUMICE_STAIRS);
                    entries.add(DecorationBlocks.PUMICE_SLAB);
                    entries.add(DecorationBlocks.PUMICE_WALL);
                    //entries.add(DecorationBlocks.PUMICE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.PUMICE_BRICKS);
                    entries.add(DecorationBlocks.PUMICE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.PUMICE_BRICK_SLAB);
                    entries.add(DecorationBlocks.PUMICE_BRICK_WALL);
                    entries.add(DecorationBlocks.HOT_PUMICE);
                    entries.add(DecorationBlocks.HOT_PUMICE_STAIRS);
                    entries.add(DecorationBlocks.HOT_PUMICE_SLAB);
                    entries.add(DecorationBlocks.HOT_PUMICE_WALL);
                    //entries.add(DecorationBlocks.HOT_PUMICE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.HOT_PUMICE_BRICKS);
                    entries.add(DecorationBlocks.HOT_PUMICE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.HOT_PUMICE_BRICK_SLAB);
                    entries.add(DecorationBlocks.HOT_PUMICE_BRICK_WALL);
                    entries.add(DecorationBlocks.LIMESTONE);
                    entries.add(DecorationBlocks.LIMESTONE_STAIRS);
                    entries.add(DecorationBlocks.LIMESTONE_SLAB);
                    entries.add(DecorationBlocks.LIMESTONE_WALL);
                    //entries.add(DecorationBlocks.LIMESTONE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.LIMESTONE_BRICKS);
                    entries.add(DecorationBlocks.LIMESTONE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.LIMESTONE_BRICK_SLAB);
                    entries.add(DecorationBlocks.LIMESTONE_BRICK_WALL);
                    entries.add(DecorationBlocks.MARBLE);
                    entries.add(DecorationBlocks.MARBLE_STAIRS);
                    entries.add(DecorationBlocks.MARBLE_SLAB);
                    entries.add(DecorationBlocks.MARBLE_WALL);
                    entries.add(DecorationBlocks.MARBLE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.MARBLE_BRICKS);
                    entries.add(DecorationBlocks.MARBLE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.MARBLE_BRICK_SLAB);
                    entries.add(DecorationBlocks.MARBLE_BRICK_WALL);
                    entries.add(DecorationBlocks.SALT_BLOCK);
                    entries.add(DecorationBlocks.SALT_STAIRS);
                    entries.add(DecorationBlocks.SALT_SLAB);
                    entries.add(DecorationBlocks.SALT_WALL);
                    //entries.add(DecorationBlocks.SALT_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.SALT_BRICKS);
                    entries.add(DecorationBlocks.SALT_BRICK_STAIRS);
                    entries.add(DecorationBlocks.SALT_BRICK_SLAB);
                    entries.add(DecorationBlocks.SALT_BRICK_WALL);
                    entries.add(DecorationBlocks.SHALE);
                    entries.add(DecorationBlocks.SHALE_STAIRS);
                    entries.add(DecorationBlocks.SHALE_SLAB);
                    entries.add(DecorationBlocks.SHALE_WALL);
                    //entries.add(DecorationBlocks.SHALE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.SHALE_BRICKS);
                    entries.add(DecorationBlocks.SHALE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.SHALE_BRICK_SLAB);
                    entries.add(DecorationBlocks.SHALE_BRICK_WALL);
                    //entries.add(DecorationBlocks.HELLSTONE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.HELLSTONE_BRICKS);
                    entries.add(DecorationBlocks.HELLSTONE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.HELLSTONE_BRICK_SLAB);
                    entries.add(DecorationBlocks.HELLSTONE_BRICK_WALL);
                    //entries.add(DecorationBlocks.NETHER_PRISMARINE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.NETHER_PRISMARINE);
                    entries.add(DecorationBlocks.NETHER_PRISMARINE_BRICKS);
                    entries.add(DecorationBlocks.NETHER_PRISMARINE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.NETHER_PRISMARINE_BRICK_SLAB);
                    entries.add(DecorationBlocks.NETHER_PRISMARINE_BRICK_WALL);
                    //entries.add(DecorationBlocks.ANDESITE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.ANDESITE_BRICKS);
                    entries.add(DecorationBlocks.ANDESITE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.ANDESITE_BRICK_SLAB);
                    entries.add(DecorationBlocks.ANDESITE_BRICK_WALL);
                    //entries.add(DecorationBlocks.DIORITE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.DIORITE_BRICKS);
                    entries.add(DecorationBlocks.DIORITE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.DIORITE_BRICK_SLAB);
                    entries.add(DecorationBlocks.DIORITE_BRICK_WALL);
                    //entries.add(DecorationBlocks.GRANITE_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.GRANITE_BRICKS);
                    entries.add(DecorationBlocks.GRANITE_BRICK_STAIRS);
                    entries.add(DecorationBlocks.GRANITE_BRICK_SLAB);
                    entries.add(DecorationBlocks.GRANITE_BRICK_WALL);
                    //entries.add(DecorationBlocks.SNOW_CHISELED_BRICKS);
                    entries.add(DecorationBlocks.SNOW_BRICKS);
                    entries.add(DecorationBlocks.SNOW_BRICK_STAIRS);
                    entries.add(DecorationBlocks.SNOW_BRICK_SLAB);
                    entries.add(DecorationBlocks.SNOW_BRICK_WALL);
                }).build());

        Registry.register(Registries.ITEM_GROUP, TESTING, FabricItemGroup.builder().displayName(Text.translatable("Update/Testing"))
                .icon(() -> new ItemStack(Blocks.BARRIER)).entries((context, entries) -> {
                    entries.add(ModItems.NETHER_PORTAL_BOTTLE);
                    entries.add(ModItems.END_PORTAL_BOTTLE);
                    entries.add(ModItems.TEST);
                    entries.add(ModItems.PURPLE_TORCH_ITEM);
                    entries.add(ModItems.TRAVELERS_DREAM);
                    entries.add(ModItems.LIFE_ESSENCE);
                    entries.add(MagicItems.INSTANT_DAMAGE_FLUID);
                    entries.add(MagicItems.INSTANT_HEALTH_FLUID);
                    entries.add(MagicItems.INSTANT_DAMAGE_AMULET);
                    entries.add(MagicItems.INSTANT_HEALTH_AMULET);
                }).build());

    }

}
